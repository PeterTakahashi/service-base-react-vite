/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/jwt/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Jwt.Login */
        post: operations["auth_jwt_login_auth_jwt_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/jwt/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Jwt.Logout */
        post: operations["auth_jwt_logout_auth_jwt_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Cookie.Login */
        post: operations["auth_cookie_login_auth_cookie_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Cookie.Logout */
        post: operations["auth_cookie_logout_auth_cookie_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register:Register */
        post: operations["register_register_auth_register_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/forgot-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reset:Forgot Password */
        post: operations["reset_forgot_password_auth_forgot_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reset:Reset Password */
        post: operations["reset_reset_password_auth_reset_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/request-verify-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify:Request-Token */
        post: operations["verify_request_token_auth_request_verify_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify:Verify */
        post: operations["verify_verify_auth_verify_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/google/authorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Oauth:Google.Cookie Oauth.Authorize */
        get: operations["oauth_google_cookie_oauth_authorize_auth_cookie_google_authorize_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/google/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Oauth:Google.Cookie Oauth.Callback
         * @description The response varies based on the authentication backend used.
         */
        get: operations["oauth_google_cookie_oauth_callback_auth_cookie_google_callback_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/github/authorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Oauth:Github.Cookie Oauth.Authorize */
        get: operations["oauth_github_cookie_oauth_authorize_auth_cookie_github_authorize_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/github/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Oauth:Github.Cookie Oauth.Callback
         * @description The response varies based on the authentication backend used.
         */
        get: operations["oauth_github_cookie_oauth_callback_auth_cookie_github_callback_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Users:Get Current User */
        get: operations["users_get_current_user_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Users:Patch Current User */
        patch: operations["users_patch_current_user_users_me_patch"];
        trace?: never;
    };
    "/payment-intents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Payment Intents:Create Payment Intent */
        post: operations["payment_intents_create_payment_intent_payment_intents_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/payment-intents/webhook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Payment Intents:Update Payment Intent By Webhook */
        post: operations["payment_intents_update_payment_intent_by_webhook_payment_intents_webhook_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/wallet-transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Wallet Transactions:List Wallet Transactions
         * @description Retrieve a list of wallet transactions with filtering, sorting, and pagination.
         */
        get: operations["wallet_transactions_list_wallet_transactions_wallet_transactions_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/wallet-transactions/{wallet_transaction_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Wallet Transactions:Get Wallet Transaction */
        get: operations["wallet_transactions_get_wallet_transaction_wallet_transactions__wallet_transaction_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-api-keys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * User Api Keys:List User Api Keys
         * @description Retrieve a list of user API keys with filtering, sorting, and pagination.
         */
        get: operations["user_api_keys_list_user_api_keys_user_api_keys_get"];
        put?: never;
        /**
         * User Api Keys:Create User Api Key
         * @description Create a new user API key.
         */
        post: operations["user_api_keys_create_user_api_key_user_api_keys_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user-api-keys/{user_api_key_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * User Api Keys:Get User Api Keys
         * @description Retrieve a user API key by its ID.
         */
        get: operations["user_api_keys_get_user_api_keys_user_api_keys__user_api_key_id__get"];
        put?: never;
        post?: never;
        /**
         * User Api Keys:Delete User Api Key
         * @description Delete a user API key.
         */
        delete: operations["user_api_keys_delete_user_api_key_user_api_keys__user_api_key_id__delete"];
        options?: never;
        head?: never;
        /**
         * User Api Keys:Update User Api Key
         * @description Update an existing user API key.
         */
        patch: operations["user_api_keys_update_user_api_key_user_api_keys__user_api_key_id__patch"];
        trace?: never;
    };
    "/user-api-keys/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** User Api Keys:Verify User Api Key */
        post: operations["user_api_keys_verify_user_api_key_user_api_keys_verify_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** BearerResponse */
        BearerResponse: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
        };
        /** Body_auth_cookie_login_auth_cookie_login_post */
        Body_auth_cookie_login_auth_cookie_login_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** Body_auth_jwt_login_auth_jwt_login_post */
        Body_auth_jwt_login_auth_jwt_login_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** Body_reset_forgot_password_auth_forgot_password_post */
        Body_reset_forgot_password_auth_forgot_password_post: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** Body_reset_reset_password_auth_reset_password_post */
        Body_reset_reset_password_auth_reset_password_post: {
            /** Token */
            token: string;
            /** Password */
            password: string;
        };
        /** Body_verify_request_token_auth_request_verify_token_post */
        Body_verify_request_token_auth_request_verify_token_post: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** Body_verify_verify_auth_verify_post */
        Body_verify_verify_auth_verify_post: {
            /** Token */
            token: string;
        };
        /** ErrorModel */
        ErrorModel: {
            /** Detail */
            detail: string | {
                [key: string]: string;
            };
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** ListResponseMeta */
        ListResponseMeta: {
            /**
             * Limit
             * @description Maximum number of items to retrieve
             * @default 100
             */
            limit: number;
            /**
             * Offset
             * @description Starting position for retrieval
             * @default 0
             */
            offset: number;
            /**
             * Sorted By
             * @description Field name to sort by
             * @default id
             */
            sorted_by: string | null;
            /**
             * Sorted Order
             * @description Sort order: asc or desc
             * @default asc
             */
            sorted_order: string;
            /**
             * Total Count
             * @description Total number of items matching the search criteria.
             * @example 100
             */
            total_count: number;
        };
        /** OAuth2AuthorizeResponse */
        OAuth2AuthorizeResponse: {
            /** Authorization Url */
            authorization_url: string;
        };
        /** PaymentIntentCreate */
        PaymentIntentCreate: {
            /**
             * Amount
             * @description The amount to be charged in the smallest currency unit (e.g., cents for USD).
             * @example 1000
             */
            amount: number;
        };
        /** PaymentIntentCreateResponse */
        PaymentIntentCreateResponse: {
            /**
             * Id
             * @description The unique identifier for the payment intent.
             * @example pi_1F8Y2e2eZvKYlo2C0d3f4g5h6
             */
            id: string;
            /**
             * Amount
             * @description The amount to be charged in the smallest currency unit (e.g., cents for USD).
             * @example 1000
             */
            amount: number;
            /**
             * Currency
             * @description The currency in which the payment intent is created.
             * @example usd
             */
            currency: string;
            /**
             * Client Secret
             * @description The client secret used to confirm the payment intent on the client side.
             * @example pi_1F8Y2e2eZvKYlo2C0d3f4g5h6_secret_1234567890
             */
            client_secret: string;
            /**
             * Status
             * @description The current status of the payment intent.
             * @example requires_confirmation
             */
            status: string;
        };
        /** UserApiKeyCreate */
        UserApiKeyCreate: {
            /**
             * Name
             * @description Name of the API key
             * @example My API Key
             */
            name: string;
            /**
             * Expires At
             * @description Expiration datetime of the API key
             * @example 2024-12-31T23:59:59Z
             */
            expires_at?: string | null;
            /**
             * Allowed Origin
             * @description CORS allowed origin
             * @example https://example.com
             */
            allowed_origin?: string | null;
            /**
             * Allowed Ip
             * @description Allowed IP address
             * @example 192.168.1.1
             */
            allowed_ip?: string | null;
        };
        /** UserApiKeyListRead */
        UserApiKeyListRead: {
            meta: components["schemas"]["ListResponseMeta"];
            /** Data */
            data: components["schemas"]["UserApiKeyRead"][];
        };
        /** UserApiKeyRead */
        UserApiKeyRead: {
            /**
             * Id
             * @description The ID of the object
             * @example abcd1234xyzc
             */
            id: string;
            /**
             * Name
             * @description Name of the API key
             * @example My API Key
             */
            name: string;
            /**
             * Api Key
             * @description The actual API key
             * @example 1234567890abcdef
             */
            api_key: string;
            /**
             * Expires At
             * @description Expiration datetime of the API key
             * @example 2024-12-31T23:59:59Z
             */
            expires_at?: string | null;
            /**
             * Allowed Origin
             * @description CORS allowed origin
             * @example https://example.com
             */
            allowed_origin?: string | null;
            /**
             * Allowed Ip
             * @description Allowed IP address
             * @example 192.168.1.1
             */
            allowed_ip?: string | null;
            /**
             * Created At
             * Format: date-time
             * @description Creation datetime of the API key
             * @example 2023-10-01T12:00:00Z
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             * @description Last updated datetime of the API key
             * @example 2023-10-01T12:00:00Z
             */
            updated_at: string;
        };
        /** UserApiKeyUpdate */
        UserApiKeyUpdate: {
            /**
             * Name
             * @description Name of the API key
             * @example My API Key
             */
            name: string;
            /**
             * Expires At
             * @description Expiration datetime of the API key
             * @example 2024-12-31T23:59:59Z
             */
            expires_at?: string | null;
            /**
             * Allowed Origin
             * @description CORS allowed origin
             * @example https://example.com
             */
            allowed_origin?: string | null;
            /**
             * Allowed Ip
             * @description Allowed IP address
             * @example 192.168.1.1
             */
            allowed_ip?: string | null;
        };
        /**
         * UserApiKeyVerifyResponse
         * @description Response model for verifying an API key.
         */
        UserApiKeyVerifyResponse: {
            /**
             * Is Valid
             * @description Indicates whether the API key is valid
             * @example true
             */
            is_valid: boolean;
        };
        /** UserCreate */
        UserCreate: {
            /**
             * Email
             * Format: email
             * @description The email of the user.
             * @example user@example.com
             */
            email: string;
            /**
             * Password
             * @description The password of the user.
             * @example password123%
             */
            password: string;
        };
        /** UserRead */
        UserRead: {
            /** Id */
            id: unknown;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Is Verified
             * @default false
             */
            is_verified: boolean;
        };
        /** UserUpdate */
        UserUpdate: {
            /**
             * Email
             * @description The email of the user.
             * @example user@example.com
             */
            email?: string | null;
            /**
             * Password
             * @description The password of the user.
             * @example password123%
             */
            password?: string | null;
        };
        /** UserWithWalletRead */
        UserWithWalletRead: {
            /** Id */
            id: unknown;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Is Verified
             * @default false
             */
            is_verified: boolean;
            /** @description The wallet associated with the user. */
            wallet: components["schemas"]["WalletRead"];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /**
         * WalletRead
         * @description Schema for reading wallet information.
         */
        WalletRead: {
            /**
             * Balance
             * @description The current balance of the wallet.
             * @example 1000
             */
            balance: number;
            /**
             * Created At
             * Format: date-time
             * @description The date and time when the wallet was created.
             * @example 2023-10-01T12:00:00Z
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             * @description The date and time when the wallet was last updated.
             * @example 2023-10-01T12:00:00Z
             */
            updated_at: string;
        };
        /** WalletTransactionListResponse */
        WalletTransactionListResponse: {
            meta: components["schemas"]["ListResponseMeta"];
            /** Data */
            data: components["schemas"]["WalletTransactionRead"][];
        };
        /**
         * WalletTransactionRead
         * @description Schema for reading wallet transaction information.
         */
        WalletTransactionRead: {
            /**
             * Id
             * @description The ID of the object
             * @example abcd1234xyzc
             */
            id: string;
            /**
             * Amount
             * @description The amount of the transaction in cents.
             * @example 1000
             */
            amount: number;
            /**
             * @description The type of the wallet transaction (e.g., 'deposit', 'spend').
             * @example deposit
             */
            wallet_transaction_type: components["schemas"]["WalletTransactionType"];
            /**
             * @description The status of the wallet transaction (e.g., 'pending', 'completed').
             * @example completed
             */
            wallet_transaction_status: components["schemas"]["WalletTransactionStatus"];
            /**
             * Created At
             * Format: date-time
             * @description The date and time when the transaction was created.
             * @example 2023-10-01T12:00:00Z
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             * @description The date and time when the transaction was last updated.
             * @example 2023-10-01T12:00:00Z
             */
            updated_at: string;
        };
        /**
         * WalletTransactionStatus
         * @enum {string}
         */
        WalletTransactionStatus: "pending" | "completed" | "failed";
        /**
         * WalletTransactionType
         * @enum {string}
         */
        WalletTransactionType: "deposit" | "spend";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    auth_jwt_login_auth_jwt_login_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_auth_jwt_login_auth_jwt_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI",
                     *       "token_type": "bearer"
                     *     } */
                    "application/json": components["schemas"]["BearerResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    auth_jwt_logout_auth_jwt_logout_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Missing token or inactive user. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    auth_cookie_login_auth_cookie_login_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_auth_cookie_login_auth_cookie_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    auth_cookie_logout_auth_cookie_logout_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Missing token or inactive user. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    register_register_auth_register_register_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    reset_forgot_password_auth_forgot_password_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_reset_forgot_password_auth_forgot_password_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    reset_reset_password_auth_reset_password_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_reset_reset_password_auth_reset_password_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    verify_request_token_auth_request_verify_token_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_verify_request_token_auth_request_verify_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    verify_verify_auth_verify_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_verify_verify_auth_verify_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_google_cookie_oauth_authorize_auth_cookie_google_authorize_get: {
        parameters: {
            query?: {
                scopes?: string[];
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OAuth2AuthorizeResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_google_cookie_oauth_callback_auth_cookie_google_callback_get: {
        parameters: {
            query?: {
                code?: string | null;
                code_verifier?: string | null;
                state?: string | null;
                error?: string | null;
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_github_cookie_oauth_authorize_auth_cookie_github_authorize_get: {
        parameters: {
            query?: {
                scopes?: string[];
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OAuth2AuthorizeResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_github_cookie_oauth_callback_auth_cookie_github_callback_get: {
        parameters: {
            query?: {
                code?: string | null;
                code_verifier?: string | null;
                state?: string | null;
                error?: string | null;
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    users_get_current_user_users_me_get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserWithWalletRead"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    users_patch_current_user_users_me_patch: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    payment_intents_create_payment_intent_payment_intents_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaymentIntentCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentIntentCreateResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    payment_intents_update_payment_intent_by_webhook_payment_intents_webhook_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    wallet_transactions_list_wallet_transactions_wallet_transactions_get: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
                sorted_by?: string;
                sorted_order?: string;
                amount__gte?: number | null;
                amount__lte?: number | null;
                wallet_transaction_type__in?: components["schemas"]["WalletTransactionType"][] | null;
                wallet_transaction_status__in?: components["schemas"]["WalletTransactionStatus"][] | null;
                created_at__gte?: string | null;
                created_at__lte?: string | null;
                updated_at__gte?: string | null;
                updated_at__lte?: string | null;
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WalletTransactionListResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    wallet_transactions_get_wallet_transaction_wallet_transactions__wallet_transaction_id__get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path: {
                wallet_transaction_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WalletTransactionRead"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    user_api_keys_list_user_api_keys_user_api_keys_get: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
                sorted_by?: string | null;
                sorted_order?: string;
                name__icontains?: string | null;
                api_key__icontains?: string | null;
                expires_at__gte?: string | null;
                expires_at__lte?: string | null;
                allowed_origin__icontains?: string | null;
                allowed_ip__icontains?: string | null;
                created_at__gte?: string | null;
                created_at__lte?: string | null;
                updated_at__gte?: string | null;
                updated_at__lte?: string | null;
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserApiKeyListRead"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    user_api_keys_create_user_api_key_user_api_keys_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserApiKeyCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserApiKeyRead"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    user_api_keys_get_user_api_keys_user_api_keys__user_api_key_id__get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path: {
                user_api_key_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserApiKeyRead"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    user_api_keys_delete_user_api_key_user_api_keys__user_api_key_id__delete: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path: {
                user_api_key_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    user_api_keys_update_user_api_key_user_api_keys__user_api_key_id__patch: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path: {
                user_api_key_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserApiKeyUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserApiKeyRead"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    user_api_keys_verify_user_api_key_user_api_keys_verify_post: {
        parameters: {
            query?: never;
            header?: {
                "X-API-KEY"?: string | null;
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserApiKeyVerifyResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
}
