/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/jwt/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Jwt.Login */
        post: operations["auth_jwt_login_auth_jwt_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/jwt/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Jwt.Logout */
        post: operations["auth_jwt_logout_auth_jwt_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Cookie.Login */
        post: operations["auth_cookie_login_auth_cookie_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth:Cookie.Logout */
        post: operations["auth_cookie_logout_auth_cookie_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register:Register */
        post: operations["register_register_auth_register_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/forgot-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reset:Forgot Password */
        post: operations["reset_forgot_password_auth_forgot_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reset:Reset Password */
        post: operations["reset_reset_password_auth_reset_password_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/request-verify-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify:Request-Token */
        post: operations["verify_request_token_auth_request_verify_token_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Verify:Verify */
        post: operations["verify_verify_auth_verify_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/google/authorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Oauth:Google.Cookie Oauth.Authorize */
        get: operations["oauth_google_cookie_oauth_authorize_auth_cookie_google_authorize_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/google/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Oauth:Google.Cookie Oauth.Callback
         * @description The response varies based on the authentication backend used.
         */
        get: operations["oauth_google_cookie_oauth_callback_auth_cookie_google_callback_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/github/authorize": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Oauth:Github.Cookie Oauth.Authorize */
        get: operations["oauth_github_cookie_oauth_authorize_auth_cookie_github_authorize_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/cookie/github/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Oauth:Github.Cookie Oauth.Callback
         * @description The response varies based on the authentication backend used.
         */
        get: operations["oauth_github_cookie_oauth_callback_auth_cookie_github_callback_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Users:Get Current User */
        get: operations["users_get_current_user_users_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Users:Patch Current User */
        patch: operations["users_patch_current_user_users_me_patch"];
        trace?: never;
    };
    "/payment-intents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Payment Intents:Create Payment Intent */
        post: operations["payment_intents_create_payment_intent_payment_intents_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** BearerResponse */
        BearerResponse: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
        };
        /** Body_auth_cookie_login_auth_cookie_login_post */
        Body_auth_cookie_login_auth_cookie_login_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** Body_auth_jwt_login_auth_jwt_login_post */
        Body_auth_jwt_login_auth_jwt_login_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** Body_reset_forgot_password_auth_forgot_password_post */
        Body_reset_forgot_password_auth_forgot_password_post: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** Body_reset_reset_password_auth_reset_password_post */
        Body_reset_reset_password_auth_reset_password_post: {
            /** Token */
            token: string;
            /** Password */
            password: string;
        };
        /** Body_verify_request_token_auth_request_verify_token_post */
        Body_verify_request_token_auth_request_verify_token_post: {
            /**
             * Email
             * Format: email
             */
            email: string;
        };
        /** Body_verify_verify_auth_verify_post */
        Body_verify_verify_auth_verify_post: {
            /** Token */
            token: string;
        };
        /** ErrorModel */
        ErrorModel: {
            /** Detail */
            detail: string | {
                [key: string]: string;
            };
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** OAuth2AuthorizeResponse */
        OAuth2AuthorizeResponse: {
            /** Authorization Url */
            authorization_url: string;
        };
        /** PaymentIntentCreate */
        PaymentIntentCreate: {
            /**
             * Amount
             * @description The amount to be charged in the smallest currency unit (e.g., cents for USD).
             * @example 1000
             */
            amount: number;
        };
        /** PaymentIntentCreateResponse */
        PaymentIntentCreateResponse: {
            /**
             * Id
             * @description The unique identifier for the payment intent.
             * @example pi_1F8Y2e2eZvKYlo2C0d3f4g5h6
             */
            id: string;
            /**
             * Amount
             * @description The amount to be charged in the smallest currency unit (e.g., cents for USD).
             * @example 1000
             */
            amount: number;
            /**
             * Currency
             * @description The currency in which the payment intent is created.
             * @example usd
             */
            currency: string;
            /**
             * Client Secret
             * @description The client secret used to confirm the payment intent on the client side.
             * @example pi_1F8Y2e2eZvKYlo2C0d3f4g5h6_secret_1234567890
             */
            client_secret: string;
            /**
             * Status
             * @description The current status of the payment intent.
             * @example requires_confirmation
             */
            status: string;
        };
        /** UserCreate */
        UserCreate: {
            /**
             * Email
             * Format: email
             * @description The email of the user.
             * @example user@example.com
             */
            email: string;
            /**
             * Password
             * @description The password of the user.
             * @example password123%
             */
            password: string;
        };
        /** UserRead */
        UserRead: {
            /** Id */
            id: unknown;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Is Verified
             * @default false
             */
            is_verified: boolean;
        };
        /** UserUpdate */
        UserUpdate: {
            /**
             * Email
             * @description The email of the user.
             * @example user@example.com
             */
            email?: string | null;
            /**
             * Password
             * @description The password of the user.
             * @example password123%
             */
            password?: string | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    auth_jwt_login_auth_jwt_login_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_auth_jwt_login_auth_jwt_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI",
                     *       "token_type": "bearer"
                     *     } */
                    "application/json": components["schemas"]["BearerResponse"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    auth_jwt_logout_auth_jwt_logout_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Missing token or inactive user. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    auth_cookie_login_auth_cookie_login_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_auth_cookie_login_auth_cookie_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    auth_cookie_logout_auth_cookie_logout_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Missing token or inactive user. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    register_register_auth_register_register_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    reset_forgot_password_auth_forgot_password_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_reset_forgot_password_auth_forgot_password_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    reset_reset_password_auth_reset_password_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_reset_reset_password_auth_reset_password_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    verify_request_token_auth_request_verify_token_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_verify_request_token_auth_request_verify_token_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    verify_verify_auth_verify_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Body_verify_verify_auth_verify_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_google_cookie_oauth_authorize_auth_cookie_google_authorize_get: {
        parameters: {
            query?: {
                scopes?: string[];
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OAuth2AuthorizeResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_google_cookie_oauth_callback_auth_cookie_google_callback_get: {
        parameters: {
            query?: {
                code?: string | null;
                code_verifier?: string | null;
                state?: string | null;
                error?: string | null;
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_github_cookie_oauth_authorize_auth_cookie_github_authorize_get: {
        parameters: {
            query?: {
                scopes?: string[];
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OAuth2AuthorizeResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    oauth_github_cookie_oauth_callback_auth_cookie_github_callback_get: {
        parameters: {
            query?: {
                code?: string | null;
                code_verifier?: string | null;
                state?: string | null;
                error?: string | null;
            };
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    users_get_current_user_users_me_get: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    users_patch_current_user_users_me_patch: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserRead"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorModel"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
    payment_intents_create_payment_intent_payment_intents_post: {
        parameters: {
            query?: never;
            header?: {
                /** @description Language preference (e.g., en, ja) */
                "Accept-Language"?: string;
                /** @description Bearer token for authentication */
                Authorization?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PaymentIntentCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentIntentCreateResponse"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "401",
                     *           "code": "unauthorized",
                     *           "title": "Unauthorized",
                     *           "detail": "Authentication credentials were not provided or are invalid."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "422",
                     *           "code": "validation_error",
                     *           "title": "Validation Error",
                     *           "detail": "The field 'title' is required.",
                     *           "source": {
                     *             "parameter": "title"
                     *           }
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "errors": [
                     *         {
                     *           "status": "500",
                     *           "code": "internal_server_error",
                     *           "title": "Internal Server Error",
                     *           "detail": "An unexpected error occurred. Please try again later."
                     *         }
                     *       ]
                     *     } */
                    "application/json": unknown;
                };
            };
        };
    };
}
