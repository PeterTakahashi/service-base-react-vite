{
  "openapi": "3.1.0",
  "info": {
    "title": "Service Base FastAPI",
    "description": "Version 1 of the  FastAPI Applicatoin",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/jwt/login": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Auth:Jwt.Login",
        "operationId": "auth_jwt_login_auth_jwt_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_jwt_login_auth_jwt_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BearerResponse" },
                "example": {
                  "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI",
                  "token_type": "bearer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "Bad credentials or the user is inactive.",
                    "value": { "detail": "LOGIN_BAD_CREDENTIALS" }
                  },
                  "LOGIN_USER_NOT_VERIFIED": {
                    "summary": "The user is not verified.",
                    "value": { "detail": "LOGIN_USER_NOT_VERIFIED" }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/jwt/logout": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Auth:Jwt.Logout",
        "operationId": "auth_jwt_logout_auth_jwt_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "401": { "description": "Missing token or inactive user." },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/auth/cookie/login": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Auth:Cookie.Login",
        "operationId": "auth_cookie_login_auth_cookie_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_cookie_login_auth_cookie_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "Bad credentials or the user is inactive.",
                    "value": { "detail": "LOGIN_BAD_CREDENTIALS" }
                  },
                  "LOGIN_USER_NOT_VERIFIED": {
                    "summary": "The user is not verified.",
                    "value": { "detail": "LOGIN_USER_NOT_VERIFIED" }
                  }
                }
              }
            }
          },
          "204": { "description": "No Content" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/cookie/logout": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Auth:Cookie.Logout",
        "operationId": "auth_cookie_logout_auth_cookie_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "401": { "description": "Missing token or inactive user." },
          "204": { "description": "No Content" },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/register/register": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Register:Register",
        "operationId": "register_register_auth_register_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRead" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "REGISTER_USER_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": { "detail": "REGISTER_USER_ALREADY_EXISTS" }
                  },
                  "REGISTER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "REGISTER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Reset:Forgot Password",
        "operationId": "reset_forgot_password_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_forgot_password_auth_forgot_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Reset:Reset Password",
        "operationId": "reset_reset_password_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_reset_password_auth_reset_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "RESET_PASSWORD_BAD_TOKEN": {
                    "summary": "Bad or expired token.",
                    "value": { "detail": "RESET_PASSWORD_BAD_TOKEN" }
                  },
                  "RESET_PASSWORD_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "RESET_PASSWORD_INVALID_PASSWORD",
                        "reason": "Password should be at least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/request-verify-token": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Verify:Request-Token",
        "operationId": "verify_request_token_auth_request_verify_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_request_token_auth_request_verify_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/auth/verify": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Verify:Verify",
        "operationId": "verify_verify_auth_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_verify_auth_verify_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRead" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "VERIFY_USER_BAD_TOKEN": {
                    "summary": "Bad token, not existing user ornot the e-mail currently set for the user.",
                    "value": { "detail": "VERIFY_USER_BAD_TOKEN" }
                  },
                  "VERIFY_USER_ALREADY_VERIFIED": {
                    "summary": "The user is already verified.",
                    "value": { "detail": "VERIFY_USER_ALREADY_VERIFIED" }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/auth/cookie/google/authorize": {
      "get": {
        "tags": ["auth", "auth"],
        "summary": "Oauth:Google.Cookie Oauth.Authorize",
        "operationId": "oauth_google_cookie_oauth_authorize_auth_cookie_google_authorize_get",
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" },
              "title": "Scopes"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2AuthorizeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/cookie/google/callback": {
      "get": {
        "tags": ["auth", "auth"],
        "summary": "Oauth:Google.Cookie Oauth.Callback",
        "description": "The response varies based on the authentication backend used.",
        "operationId": "oauth_google_cookie_oauth_callback_auth_cookie_google_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Code"
            }
          },
          {
            "name": "code_verifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Code Verifier"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "State"
            }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Error"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "INVALID_STATE_TOKEN": { "summary": "Invalid state token." },
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "User is inactive.",
                    "value": { "detail": "LOGIN_BAD_CREDENTIALS" }
                  }
                },
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/cookie/github/authorize": {
      "get": {
        "tags": ["auth", "auth"],
        "summary": "Oauth:Github.Cookie Oauth.Authorize",
        "operationId": "oauth_github_cookie_oauth_authorize_auth_cookie_github_authorize_get",
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" },
              "title": "Scopes"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2AuthorizeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/cookie/github/callback": {
      "get": {
        "tags": ["auth", "auth"],
        "summary": "Oauth:Github.Cookie Oauth.Callback",
        "description": "The response varies based on the authentication backend used.",
        "operationId": "oauth_github_cookie_oauth_callback_auth_cookie_github_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Code"
            }
          },
          {
            "name": "code_verifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Code Verifier"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "State"
            }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Error"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "INVALID_STATE_TOKEN": { "summary": "Invalid state token." },
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "User is inactive.",
                    "value": { "detail": "LOGIN_BAD_CREDENTIALS" }
                  }
                },
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Users:Get Current User",
        "operationId": "users_get_current_user_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserWithWalletRead" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      },
      "patch": {
        "tags": ["users"],
        "summary": "Users:Patch Current User",
        "operationId": "users_patch_current_user_users_me_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRead" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": { "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS" }
                  },
                  "UPDATE_USER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "UPDATE_USER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/payment-intents": {
      "post": {
        "tags": ["payment_intents"],
        "summary": "Payment Intents:Create Payment Intent",
        "operationId": "payment_intents_create_payment_intent_payment_intents_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentIntentCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/payment-intents/webhook": {
      "post": {
        "tags": ["payment_intents"],
        "summary": "Payment Intents:Update Payment Intent By Webhook",
        "operationId": "payment_intents_update_payment_intent_by_webhook_payment_intents_webhook_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/wallet-transactions": {
      "get": {
        "tags": ["wallet_transactions"],
        "summary": "Wallet Transactions:List Wallet Transactions",
        "description": "Retrieve a list of wallet transactions with filtering, sorting, and pagination.",
        "operationId": "wallet_transactions_list_wallet_transactions_wallet_transactions_get",
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sorted_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "id",
              "title": "Sorted By"
            }
          },
          {
            "name": "sorted_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "title": "Sorted Order"
            }
          },
          {
            "name": "amount__gte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "Amount  Gte"
            }
          },
          {
            "name": "amount__lte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "Amount  Lte"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Created At  Gte"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Created At  Lte"
            }
          },
          {
            "name": "wallet_transaction_type__exact",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/WalletTransactionType" },
                { "type": "null" }
              ],
              "title": "Wallet Transaction Type  Exact"
            }
          },
          {
            "name": "wallet_transaction_status__exact",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/WalletTransactionStatus" },
                { "type": "null" }
              ],
              "title": "Wallet Transaction Status  Exact"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransactionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/wallet-transactions/{wallet_transaction_id}": {
      "get": {
        "tags": ["wallet_transactions"],
        "summary": "Wallet Transactions:Get Wallet Transaction",
        "operationId": "wallet_transactions_get_wallet_transaction_wallet_transactions__wallet_transaction_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "wallet_transaction_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Wallet Transaction Id" }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletTransactionRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/user-api-keys": {
      "get": {
        "tags": ["user_api_keys"],
        "summary": "User Api Keys:List User Api Keys",
        "description": "Retrieve a list of user API keys with filtering, sorting, and pagination.",
        "operationId": "user_api_keys_list_user_api_keys_user_api_keys_get",
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sorted_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "default": "id",
              "title": "Sorted By"
            }
          },
          {
            "name": "sorted_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "title": "Sorted Order"
            }
          },
          {
            "name": "name__icontains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Name  Icontains"
            }
          },
          {
            "name": "api_key__icontains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Api Key  Icontains"
            }
          },
          {
            "name": "expires_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Expires At  Gte"
            }
          },
          {
            "name": "expires_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Expires At  Lte"
            }
          },
          {
            "name": "allowed_origin__icontains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Allowed Origin  Icontains"
            }
          },
          {
            "name": "allowed_ip__icontains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Allowed Ip  Icontains"
            }
          },
          {
            "name": "created_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Created At  Gte"
            }
          },
          {
            "name": "created_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Created At  Lte"
            }
          },
          {
            "name": "updated_at__gte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Updated At  Gte"
            }
          },
          {
            "name": "updated_at__lte",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Updated At  Lte"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserApiKeyListRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user_api_keys"],
        "summary": "User Api Keys:Create User Api Key",
        "description": "Create a new user API key.",
        "operationId": "user_api_keys_create_user_api_key_user_api_keys_post",
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserApiKeyCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserApiKeyRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/user-api-keys/{user_api_key_id}": {
      "patch": {
        "tags": ["user_api_keys"],
        "summary": "User Api Keys:Update User Api Key",
        "description": "Update an existing user API key.",
        "operationId": "user_api_keys_update_user_api_key_user_api_keys__user_api_key_id__patch",
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "user_api_key_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Api Key Id" }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserApiKeyUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserApiKeyRead" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["user_api_keys"],
        "summary": "User Api Keys:Delete User Api Key",
        "description": "Delete a user API key.",
        "operationId": "user_api_keys_delete_user_api_key_user_api_keys__user_api_key_id__delete",
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "user_api_key_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "User Api Key Id" }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/user-api-keys/verify": {
      "post": {
        "tags": ["user_api_keys"],
        "summary": "User Api Keys:Verify User Api Key",
        "operationId": "user_api_keys_verify_user_api_key_user_api_keys_verify_post",
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "X-API-KEY",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "X-Api-Key"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserApiKeyVerifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BearerResponse": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": { "type": "string", "title": "Token Type" }
        },
        "type": "object",
        "required": ["access_token", "token_type"],
        "title": "BearerResponse"
      },
      "Body_auth_cookie_login_auth_cookie_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "^password$" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_auth_cookie_login_auth_cookie_login_post"
      },
      "Body_auth_jwt_login_auth_jwt_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "^password$" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_auth_jwt_login_auth_jwt_login_post"
      },
      "Body_reset_forgot_password_auth_forgot_password_post": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_reset_forgot_password_auth_forgot_password_post"
      },
      "Body_reset_reset_password_auth_reset_password_post": {
        "properties": {
          "token": { "type": "string", "title": "Token" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["token", "password"],
        "title": "Body_reset_reset_password_auth_reset_password_post"
      },
      "Body_verify_request_token_auth_request_verify_token_post": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_verify_request_token_auth_request_verify_token_post"
      },
      "Body_verify_verify_auth_verify_post": {
        "properties": { "token": { "type": "string", "title": "Token" } },
        "type": "object",
        "required": ["token"],
        "title": "Body_verify_verify_auth_verify_post"
      },
      "ErrorModel": {
        "properties": {
          "detail": {
            "anyOf": [
              { "type": "string" },
              { "additionalProperties": { "type": "string" }, "type": "object" }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": ["detail"],
        "title": "ErrorModel"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ListResponseMeta": {
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Limit",
            "description": "Maximum number of items to retrieve",
            "default": 100
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "description": "Starting position for retrieval",
            "default": 0
          },
          "sorted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sorted By",
            "description": "Field name to sort by",
            "default": "id"
          },
          "sorted_order": {
            "type": "string",
            "title": "Sorted Order",
            "description": "Sort order: asc or desc",
            "default": "asc"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of items matching the search criteria.",
            "example": 100
          }
        },
        "type": "object",
        "required": ["total_count"],
        "title": "ListResponseMeta"
      },
      "OAuth2AuthorizeResponse": {
        "properties": {
          "authorization_url": {
            "type": "string",
            "title": "Authorization Url"
          }
        },
        "type": "object",
        "required": ["authorization_url"],
        "title": "OAuth2AuthorizeResponse"
      },
      "PaymentIntentCreate": {
        "properties": {
          "amount": {
            "type": "integer",
            "minimum": 100.0,
            "title": "Amount",
            "description": "The amount to be charged in the smallest currency unit (e.g., cents for USD).",
            "example": 1000
          }
        },
        "type": "object",
        "required": ["amount"],
        "title": "PaymentIntentCreate"
      },
      "PaymentIntentCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier for the payment intent.",
            "example": "pi_1F8Y2e2eZvKYlo2C0d3f4g5h6"
          },
          "amount": {
            "type": "integer",
            "title": "Amount",
            "description": "The amount to be charged in the smallest currency unit (e.g., cents for USD).",
            "example": 1000
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "The currency in which the payment intent is created.",
            "example": "usd"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "The client secret used to confirm the payment intent on the client side.",
            "example": "pi_1F8Y2e2eZvKYlo2C0d3f4g5h6_secret_1234567890"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The current status of the payment intent.",
            "example": "requires_confirmation"
          }
        },
        "type": "object",
        "required": ["id", "amount", "currency", "client_secret", "status"],
        "title": "PaymentIntentCreateResponse"
      },
      "UserApiKeyCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Name of the API key",
            "example": "My API Key"
          },
          "expires_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expires At",
            "description": "Expiration datetime of the API key",
            "example": "2024-12-31T23:59:59Z"
          },
          "allowed_origin": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Allowed Origin",
            "description": "CORS allowed origin",
            "example": "https://example.com"
          },
          "allowed_ip": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Allowed Ip",
            "description": "Allowed IP address",
            "example": "192.168.1.1"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "UserApiKeyCreate"
      },
      "UserApiKeyListRead": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/ListResponseMeta" },
          "data": {
            "items": { "$ref": "#/components/schemas/UserApiKeyRead" },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["meta", "data"],
        "title": "UserApiKeyListRead"
      },
      "UserApiKeyRead": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the object",
            "example": "abcd1234xyzc"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Name of the API key",
            "example": "My API Key"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key",
            "description": "The actual API key",
            "example": "1234567890abcdef"
          },
          "expires_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expires At",
            "description": "Expiration datetime of the API key",
            "example": "2024-12-31T23:59:59Z"
          },
          "allowed_origin": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Allowed Origin",
            "description": "CORS allowed origin",
            "example": "https://example.com"
          },
          "allowed_ip": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Allowed Ip",
            "description": "Allowed IP address",
            "example": "192.168.1.1"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation datetime of the API key",
            "example": "2023-10-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last updated datetime of the API key",
            "example": "2023-10-01T12:00:00Z"
          }
        },
        "type": "object",
        "required": ["id", "name", "api_key", "created_at", "updated_at"],
        "title": "UserApiKeyRead"
      },
      "UserApiKeyUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Name of the API key",
            "example": "My API Key"
          },
          "expires_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Expires At",
            "description": "Expiration datetime of the API key",
            "example": "2024-12-31T23:59:59Z"
          },
          "allowed_origin": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Allowed Origin",
            "description": "CORS allowed origin",
            "example": "https://example.com"
          },
          "allowed_ip": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Allowed Ip",
            "description": "Allowed IP address",
            "example": "192.168.1.1"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "UserApiKeyUpdate"
      },
      "UserApiKeyVerifyResponse": {
        "properties": {
          "is_valid": {
            "type": "boolean",
            "title": "Is Valid",
            "description": "Indicates whether the API key is valid",
            "example": true
          }
        },
        "type": "object",
        "required": ["is_valid"],
        "title": "UserApiKeyVerifyResponse",
        "description": "Response model for verifying an API key."
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 320,
            "format": "email",
            "title": "Email",
            "description": "The email of the user.",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 8,
            "title": "Password",
            "description": "The password of the user.",
            "example": "password123%"
          }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserCreate"
      },
      "UserRead": {
        "properties": {
          "id": { "title": "Id" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          }
        },
        "type": "object",
        "required": ["id", "email"],
        "title": "UserRead"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              { "type": "string", "maxLength": 320, "format": "email" },
              { "type": "null" }
            ],
            "title": "Email",
            "description": "The email of the user.",
            "example": "user@example.com"
          },
          "password": {
            "anyOf": [
              { "type": "string", "maxLength": 100, "minLength": 8 },
              { "type": "null" }
            ],
            "title": "Password",
            "description": "The password of the user.",
            "example": "password123%"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UserWithWalletRead": {
        "properties": {
          "id": { "title": "Id" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "wallet": {
            "$ref": "#/components/schemas/WalletRead",
            "description": "The wallet associated with the user."
          }
        },
        "type": "object",
        "required": ["id", "email", "wallet"],
        "title": "UserWithWalletRead"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "WalletRead": {
        "properties": {
          "balance": {
            "type": "integer",
            "title": "Balance",
            "description": "The current balance of the wallet.",
            "example": 1000
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "The date and time when the wallet was created.",
            "example": "2023-10-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "The date and time when the wallet was last updated.",
            "example": "2023-10-01T12:00:00Z"
          }
        },
        "type": "object",
        "required": ["balance", "created_at", "updated_at"],
        "title": "WalletRead",
        "description": "Schema for reading wallet information."
      },
      "WalletTransactionListResponse": {
        "properties": {
          "meta": { "$ref": "#/components/schemas/ListResponseMeta" },
          "data": {
            "items": { "$ref": "#/components/schemas/WalletTransactionRead" },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["meta", "data"],
        "title": "WalletTransactionListResponse"
      },
      "WalletTransactionRead": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the object",
            "example": "abcd1234xyzc"
          },
          "amount": {
            "type": "integer",
            "title": "Amount",
            "description": "The amount of the transaction in cents.",
            "example": 1000
          },
          "wallet_transaction_type": {
            "$ref": "#/components/schemas/WalletTransactionType",
            "description": "The type of the wallet transaction (e.g., 'deposit', 'spend').",
            "example": "deposit"
          },
          "wallet_transaction_status": {
            "$ref": "#/components/schemas/WalletTransactionStatus",
            "description": "The status of the wallet transaction (e.g., 'pending', 'completed').",
            "example": "completed"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "The date and time when the transaction was created.",
            "example": "2023-10-01T12:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "The date and time when the transaction was last updated.",
            "example": "2023-10-01T12:00:00Z"
          }
        },
        "type": "object",
        "required": [
          "id",
          "amount",
          "wallet_transaction_type",
          "wallet_transaction_status",
          "created_at",
          "updated_at"
        ],
        "title": "WalletTransactionRead",
        "description": "Schema for reading wallet transaction information."
      },
      "WalletTransactionStatus": {
        "type": "string",
        "enum": ["pending", "completed", "failed"],
        "title": "WalletTransactionStatus"
      },
      "WalletTransactionType": {
        "type": "string",
        "enum": ["deposit", "spend"],
        "title": "WalletTransactionType"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "auth/jwt/login" } }
      },
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "access_token"
      }
    }
  },
  "servers": [{ "url": "/app/v1" }]
}
