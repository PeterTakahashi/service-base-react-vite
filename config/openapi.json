{
  "openapi": "3.1.0",
  "info": {
    "title": "Service Base FastAPI",
    "description": "Version 1 of the  FastAPI Applicatoin",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/jwt/login": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Auth:Jwt.Login",
        "operationId": "auth_jwt_login_auth_jwt_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_jwt_login_auth_jwt_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BearerResponse" },
                "example": {
                  "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI",
                  "token_type": "bearer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "Bad credentials or the user is inactive.",
                    "value": { "detail": "LOGIN_BAD_CREDENTIALS" }
                  },
                  "LOGIN_USER_NOT_VERIFIED": {
                    "summary": "The user is not verified.",
                    "value": { "detail": "LOGIN_USER_NOT_VERIFIED" }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/jwt/logout": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Auth:Jwt.Logout",
        "operationId": "auth_jwt_logout_auth_jwt_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "401": { "description": "Missing token or inactive user." },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/auth/cookie/login": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Auth:Cookie.Login",
        "operationId": "auth_cookie_login_auth_cookie_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_cookie_login_auth_cookie_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "Bad credentials or the user is inactive.",
                    "value": { "detail": "LOGIN_BAD_CREDENTIALS" }
                  },
                  "LOGIN_USER_NOT_VERIFIED": {
                    "summary": "The user is not verified.",
                    "value": { "detail": "LOGIN_USER_NOT_VERIFIED" }
                  }
                }
              }
            }
          },
          "204": { "description": "No Content" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/cookie/logout": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Auth:Cookie.Logout",
        "operationId": "auth_cookie_logout_auth_cookie_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "401": { "description": "Missing token or inactive user." },
          "204": { "description": "No Content" },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/register/register": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Register:Register",
        "operationId": "register_register_auth_register_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRead" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "REGISTER_USER_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": { "detail": "REGISTER_USER_ALREADY_EXISTS" }
                  },
                  "REGISTER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "REGISTER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Reset:Forgot Password",
        "operationId": "reset_forgot_password_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_forgot_password_auth_forgot_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Reset:Reset Password",
        "operationId": "reset_reset_password_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_reset_password_auth_reset_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "RESET_PASSWORD_BAD_TOKEN": {
                    "summary": "Bad or expired token.",
                    "value": { "detail": "RESET_PASSWORD_BAD_TOKEN" }
                  },
                  "RESET_PASSWORD_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "RESET_PASSWORD_INVALID_PASSWORD",
                        "reason": "Password should be at least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ]
      }
    },
    "/auth/request-verify-token": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Verify:Request-Token",
        "operationId": "verify_request_token_auth_request_verify_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_request_token_auth_request_verify_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/auth/verify": {
      "post": {
        "tags": ["auth", "auth"],
        "summary": "Verify:Verify",
        "operationId": "verify_verify_auth_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_verify_auth_verify_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRead" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "VERIFY_USER_BAD_TOKEN": {
                    "summary": "Bad token, not existing user ornot the e-mail currently set for the user.",
                    "value": { "detail": "VERIFY_USER_BAD_TOKEN" }
                  },
                  "VERIFY_USER_ALREADY_VERIFIED": {
                    "summary": "The user is already verified.",
                    "value": { "detail": "VERIFY_USER_ALREADY_VERIFIED" }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/auth/cookie/google/authorize": {
      "get": {
        "tags": ["auth", "auth"],
        "summary": "Oauth:Google.Cookie Oauth.Authorize",
        "operationId": "oauth_google_cookie_oauth_authorize_auth_cookie_google_authorize_get",
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" },
              "title": "Scopes"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2AuthorizeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/cookie/google/callback": {
      "get": {
        "tags": ["auth", "auth"],
        "summary": "Oauth:Google.Cookie Oauth.Callback",
        "description": "The response varies based on the authentication backend used.",
        "operationId": "oauth_google_cookie_oauth_callback_auth_cookie_google_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Code"
            }
          },
          {
            "name": "code_verifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Code Verifier"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "State"
            }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Error"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "INVALID_STATE_TOKEN": { "summary": "Invalid state token." },
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "User is inactive.",
                    "value": { "detail": "LOGIN_BAD_CREDENTIALS" }
                  }
                },
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/cookie/github/authorize": {
      "get": {
        "tags": ["auth", "auth"],
        "summary": "Oauth:Github.Cookie Oauth.Authorize",
        "operationId": "oauth_github_cookie_oauth_authorize_auth_cookie_github_authorize_get",
        "parameters": [
          {
            "name": "scopes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" },
              "title": "Scopes"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2AuthorizeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/auth/cookie/github/callback": {
      "get": {
        "tags": ["auth", "auth"],
        "summary": "Oauth:Github.Cookie Oauth.Callback",
        "description": "The response varies based on the authentication backend used.",
        "operationId": "oauth_github_cookie_oauth_callback_auth_cookie_github_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Code"
            }
          },
          {
            "name": "code_verifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Code Verifier"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "State"
            }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Error"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "INVALID_STATE_TOKEN": { "summary": "Invalid state token." },
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "User is inactive.",
                    "value": { "detail": "LOGIN_BAD_CREDENTIALS" }
                  }
                },
                "schema": { "$ref": "#/components/schemas/ErrorModel" }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Users:Get Current User",
        "operationId": "users_get_current_user_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRead" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      },
      "patch": {
        "tags": ["users"],
        "summary": "Users:Patch Current User",
        "operationId": "users_patch_current_user_users_me_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserRead" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorModel" },
                "examples": {
                  "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": { "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS" }
                  },
                  "UPDATE_USER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "UPDATE_USER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    },
    "/payment-intents": {
      "post": {
        "tags": ["payment_intents"],
        "summary": "Payment Intents:Create Payment Intent",
        "operationId": "payment_intents_create_payment_intent_payment_intents_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PaymentIntentCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentIntentCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "422",
                      "code": "validation_error",
                      "title": "Validation Error",
                      "detail": "The field 'title' is required.",
                      "source": { "parameter": "title" }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "401",
                      "code": "unauthorized",
                      "title": "Unauthorized",
                      "detail": "Authentication credentials were not provided or are invalid."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "500",
                      "code": "internal_server_error",
                      "title": "Internal Server Error",
                      "detail": "An unexpected error occurred. Please try again later."
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }, { "APIKeyCookie": [] }],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "Language preference (e.g., en, ja)",
            "required": false,
            "schema": { "type": "string", "example": "en" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token for authentication",
            "required": false,
            "schema": { "type": "string", "example": "Bearer <token>" }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BearerResponse": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": { "type": "string", "title": "Token Type" }
        },
        "type": "object",
        "required": ["access_token", "token_type"],
        "title": "BearerResponse"
      },
      "Body_auth_cookie_login_auth_cookie_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "^password$" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_auth_cookie_login_auth_cookie_login_post"
      },
      "Body_auth_jwt_login_auth_jwt_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "^password$" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_auth_jwt_login_auth_jwt_login_post"
      },
      "Body_reset_forgot_password_auth_forgot_password_post": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_reset_forgot_password_auth_forgot_password_post"
      },
      "Body_reset_reset_password_auth_reset_password_post": {
        "properties": {
          "token": { "type": "string", "title": "Token" },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["token", "password"],
        "title": "Body_reset_reset_password_auth_reset_password_post"
      },
      "Body_verify_request_token_auth_request_verify_token_post": {
        "properties": {
          "email": { "type": "string", "format": "email", "title": "Email" }
        },
        "type": "object",
        "required": ["email"],
        "title": "Body_verify_request_token_auth_request_verify_token_post"
      },
      "Body_verify_verify_auth_verify_post": {
        "properties": { "token": { "type": "string", "title": "Token" } },
        "type": "object",
        "required": ["token"],
        "title": "Body_verify_verify_auth_verify_post"
      },
      "ErrorModel": {
        "properties": {
          "detail": {
            "anyOf": [
              { "type": "string" },
              { "additionalProperties": { "type": "string" }, "type": "object" }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": ["detail"],
        "title": "ErrorModel"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "OAuth2AuthorizeResponse": {
        "properties": {
          "authorization_url": {
            "type": "string",
            "title": "Authorization Url"
          }
        },
        "type": "object",
        "required": ["authorization_url"],
        "title": "OAuth2AuthorizeResponse"
      },
      "PaymentIntentCreate": {
        "properties": {
          "amount": {
            "type": "integer",
            "minimum": 100.0,
            "title": "Amount",
            "description": "The amount to be charged in the smallest currency unit (e.g., cents for USD).",
            "example": 1000
          }
        },
        "type": "object",
        "required": ["amount"],
        "title": "PaymentIntentCreate"
      },
      "PaymentIntentCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier for the payment intent.",
            "example": "pi_1F8Y2e2eZvKYlo2C0d3f4g5h6"
          },
          "amount": {
            "type": "integer",
            "title": "Amount",
            "description": "The amount to be charged in the smallest currency unit (e.g., cents for USD).",
            "example": 1000
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "description": "The currency in which the payment intent is created.",
            "example": "usd"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "The client secret used to confirm the payment intent on the client side.",
            "example": "pi_1F8Y2e2eZvKYlo2C0d3f4g5h6_secret_1234567890"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The current status of the payment intent.",
            "example": "requires_confirmation"
          }
        },
        "type": "object",
        "required": ["id", "amount", "currency", "client_secret", "status"],
        "title": "PaymentIntentCreateResponse"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 320,
            "format": "email",
            "title": "Email",
            "description": "The email of the user.",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "maxLength": 100,
            "minLength": 8,
            "title": "Password",
            "description": "The password of the user.",
            "example": "password123%"
          }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserCreate"
      },
      "UserRead": {
        "properties": {
          "id": { "title": "Id" },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          }
        },
        "type": "object",
        "required": ["id", "email"],
        "title": "UserRead"
      },
      "UserUpdate": {
        "properties": {
          "email": {
            "anyOf": [
              { "type": "string", "maxLength": 320, "format": "email" },
              { "type": "null" }
            ],
            "title": "Email",
            "description": "The email of the user.",
            "example": "user@example.com"
          },
          "password": {
            "anyOf": [
              { "type": "string", "maxLength": 100, "minLength": 8 },
              { "type": "null" }
            ],
            "title": "Password",
            "description": "The password of the user.",
            "example": "password123%"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "auth/jwt/login" } }
      },
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "access_token"
      }
    }
  },
  "servers": [{ "url": "/app/v1" }]
}
